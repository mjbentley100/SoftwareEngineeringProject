****************** UPDATED: 4/23/2020
****************** CHECK PROGRAM FILES FOR SPECIFIC TO DO LISTS

This folder contains code and dependencies used to generate the decision tree. 
The files in this folder are as follows: 
 -- venv (dir): Python environment - holds all dependencies and modules used by python program. 
		Requirements: 
			+ Python 3.8.1
			+ MySQL Workbench 8.0 CE 
			+ MySQL Server 8.0
			+ Setup DB in MySQL Workbench: 
				> schema name: "test_schema", username: "test_user", and password: "test123"
				> run test.sql to create table 

		To run code using python environment: 
			1) run Windows PowerShell and navigate to python_decision_tree_test
			
			2) Next, run the following commands: 
				> python -m venv .\venv
				> venv\Scripts\Activate.ps1
			
			// It this is successful you should see (venv) in front of your user // 

			3) use the following command to run python program: py <python program>.py

		To add new module in python environment: 
			1) run Windows PowerShell and navigate to python_decision_tree_test
			2) venv\Scripts\Activate.ps1
			3) pip install <module> 
					or
			   python -m pip install <module>
		

-- decision_tree_test (png): Visual of decision tree generated by python code using test database

-- decision_tree_test_iris (png): Visual of decision tree generated by python code using iris database from sklearn

-- README (txt): Guide outlining the purposes and uses of the files in this folder.  

-- TreeGenerator.py (py): Python code that does the following: 
			> Parses data from database into train and test data
			> Generates decision trees that are trained using either Gini index or Entropy
			> Determines accuracy of decision trees based on tests performed using the two techniques

-- TrainingDataGenerator.py (py): Python code that does the following: 
			> Determines the classifications for audio samples
			> Translates audio samples into distinct classifying features using various audio analysis techniques
			> Inserts transformed data and its classifications into the database for future use
			> Converts DB information into .csv 

-- DBConnection.py (py): Python code used to connect to database via the MySQL server

-- training_data.csv (csv): CSV containing training data from MySQL Database

-- test_schema_test_table.sql (sql): file containing SQL commands to construct database table

-- __init__.py (py): initilizer python script (doesn't do anything) 

-- classifications (txt): a list mapping classifiers to audio samples; used for training data generator

		
